            while True:
                # Handle events
                for event in pygame.event.get():
                    mpos=pygame.mouse.get_pos()
                    if event.type == pygame.QUIT:
                        sys.exit(0)
                    elif event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:
                        sys.exit(0)
                    elif event.type==pygame.KEYDOWN and event.key == pygame.K_SPACE:
                        self.score+=1
                    elif event.type == pygame.MOUSEMOTION:
                        if isOver(self.button,mpos):
                            colorb=(0,255,0)
                        else:
                            colorb=(255,0,0)
                    elif event.type == pygame.MOUSEBUTTONDOWN:
                        if self.button.bool==True:
                            brick1.bool=True
                            brick2.bool=True
                            brick3.bool=True
                            brick4.bool=True
                            brick5.bool=True
                            brick6.bool=True
                            brick7.bool=True
                            brick8.bool=True
                            brick9.bool=True
                            brick10.bool=True
                            brick11.bool=True
                            brick12.bool=True
                            brick13.bool=True
                            self.button.bool = False
                            self.ball.pos=Vector2(400,200)
                            self.player.pos = Vector2(460, 650)
                            self.ball.moveX=-1
                            self.ball.moveY=-1
                            self.score=0

                 #ticking
                self.tps_delta+=self.tps_clock.tick()/120.0
                while self.tps_delta > 1/ self.tps_max:
                    self.tick()
                    self.tps_delta -= 1/ self.tps_max

                #drawing
                self.screen.fill((130, 130, 130))
                self.screen.blit(interface,(0,0))


                if brick1.bool == True:
                    collision(self.ball, brick1)
                if brick2.bool == True:
                    collision(self.ball, brick2)
                if brick3.bool == True:
                    collision(self.ball, brick3)
                if brick4.bool == True:
                    collision(self.ball, brick4)
                if brick5.bool == True:
                    collision(self.ball, brick5)
                if brick6.bool == True:
                    collision(self.ball, brick6)
                if brick7.bool == True:
                    collision(self.ball, brick7)
                if brick8.bool == True:
                    collision(self.ball, brick8)
                if brick9.bool == True:
                    collision(self.ball, brick9)
                if brick10.bool == True:
                    collision(self.ball, brick10)
                if brick11.bool == True:
                    collision(self.ball, brick11)
                if brick12.bool == True:
                    collision(self.ball, brick12)
                if brick13.bool == True:
                    collision(self.ball, brick13)

                text = font.render(str(self.score), 1, (130, 105, 20))
                text2 = font2.render(str(lvl), 1, (130, 105, 20))
                self.screen.blit(text, (1115, 420))
                self.screen.blit(text2, (1115,260))
                self.screen.blit(self.ball.draw(), (int(self.ball.pos.x),int(self.ball.pos.y)))
                temp=self.ball.pos.y

                    #self.screen.blit(, (int(self.button.pos.x), int(self.button.pos.y)))
                self.draw()
                if temp>700:
                    self.button.bool=True
                    pygame.draw.rect(self.screen, colorb, pygame.Rect(self.button.draw()))
                    text3 = font3.render("YOU LOST", 1, (0, 0, 0))
                    self.screen.blit(text3,((int(self.button.pos.x+self.button.width/2 - text3.get_width()/2)),int((self.button.pos.y+self.button.height/2 - text3.get_height()/2))))

                pygame.display.flip()
